from datetime import timedelta, date
import os
import random as rd
bitmap = {
"A": [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
],
"B" : [ 
    [1 , 1 , 1, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 1, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 0, 1],
    [1, 1 , 1, 1],
],
"C" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 1],
],
"D" : [ 
    [1 , 1 , 1, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 0, 1],
    [0 , 1 , 0, 1],
    [1 , 1 , 1, 1],
],
"E" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 1],
],
"F" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
],
"G" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
],
"H" : [ 
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
],
"I" : [ 
    [1 , 1 , 1, 1],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [1 , 1 , 1, 1],
],
"J" : [ 
    [1 , 1 , 1, 1],
    [0 , 0 , 1, 0],
    [0 , 0 , 1, 0],
    [0 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 1 , 1, 0],
],
"K" : [ 
    [1 , 0 , 0, 1],
    [1 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 1 , 0, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 0, 1],
],
"L" : [ 
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 1],
],
"M" : [ 
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
],
"N" : [ 
    [1 , 0 , 0, 1],
    [1 , 1 , 0, 1],
    [1 , 1 , 0, 1],
    [1 , 0 , 1, 1],
    [1 , 0 , 1, 1],
    [1 , 0 , 1, 1],
    [1 , 0 , 0, 1],
],
"O" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
],
"P" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
],
"Q" : [ 
    [1 , 1 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 1, 0],
    [1 , 1 , 1, 1],
    [0 , 0 , 0, 1],
],
"R" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
    [1 , 1 , 0, 0],
    [1 , 0 , 1, 0],
    [1 , 0 , 0, 1],
],
"S" : [ 
    [1 , 1 , 1, 1],
    [1 , 0 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 1],
    [0 , 0 , 0, 1],
    [0 , 0 , 0, 1],
    [1 , 1 , 1, 1],
],
"T" : [ 
    [1 , 1 , 1, 1],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
],
"U" : [ 
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 1 , 1, 1],
],
"V" : [ 
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [0 , 1 , 1, 1],
    [0 , 1 , 1, 0],
],
"W" : [ 
    [1 , 1 , 1, 1],
    [1 , 1 , 1, 1],
    [1 , 1 , 1, 1],
    [1 , 1 , 1, 1],
    [1 , 1 , 1, 1],
    [0 , 1 , 1, 1],
    [0 , 1 , 1, 0],
],
"X" : [ 
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
],
"Y" : [ 
    [1 , 0 , 0, 1],
    [1 , 0 , 0, 1],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
],
"Z": [ 
    [1 , 1 , 1, 1],
    [0 , 0 , 0, 1],
    [0 , 0 , 1, 0],
    [0 , 1 , 0, 0],
    [0 , 1 , 0, 0],
    [1 , 0 , 0, 0],
    [1 , 1 , 1, 1],
],
"!": [ 
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
    [0 , 0 , 0, 0],
    [0 , 1 , 1, 0],
    [0 , 1 , 1, 0],
]
}

def daterange(start_date, end_date):
    for n in range(int ((end_date - start_date).days)):
        yield start_date + timedelta(n)


def MakeCommits(dirs, dates):
    for directory in dirs:
        os.chdir(directory)
        for cdate in dates:
            for i in xrange(rd.randint(2, 15)):
                with open("readme.txt", "w") as f:
                    f.write(str(rd.randint(0,9)))
                os.system('git add readme.txt')
                os.system('git commit -m "da3412cs" --date="' + cdate.isoformat() + 'T00:00:00+0300"')


def PushAll(dirs):
    for d in dirs:
        os.chdir(d)
        os.system("git push -u origin master")


def main(dirs, dates):
    MakeCommits(dirs, dates)
    PushAll(dirs)

def generate_dates():
    start = date(2017, 1, 1)
    dates = []
    current_date = start
    sentence = "HELLOWORLD"
    for character in sentence:
        character = bitmap[character]
        for i in range(7):
            for j in range(4):
                if character[i][j] == 1:
                    dates.append(current_date + timedelta(days = i + (7*j)))
                    print("Date:", str(dates[-1]))
        current_date = current_date + timedelta(days = 35)
    return dates

if __name__ == "__main__":
    dates = generate_dates()
    print(dates)
    # Repository Link
    main({'.':'https://github.com/charanjit-singh/AllpairShortestPath.git'},
         dates)


